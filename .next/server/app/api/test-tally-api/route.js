"use strict";(()=>{var e={};e.id=665,e.ids=[665],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7790:e=>{e.exports=require("assert")},4770:e=>{e.exports=require("crypto")},7702:e=>{e.exports=require("events")},2048:e=>{e.exports=require("fs")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},9801:e=>{e.exports=require("os")},5315:e=>{e.exports=require("path")},6162:e=>{e.exports=require("stream")},4175:e=>{e.exports=require("tty")},7360:e=>{e.exports=require("url")},1764:e=>{e.exports=require("util")},1568:e=>{e.exports=require("zlib")},1946:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>u,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{POST:()=>c});var o=r(9303),a=r(8716),i=r(670),n=r(7070),l=r(3374);async function c(e){try{let{apiKey:t}=await e.json();if(!t)return n.NextResponse.json({error:"API key required"},{status:400});console.log("Testing API key:",t.substring(0,10)+"...");let r=new l.A(t);console.log("=== TEST 1: API Key Validation ===");let s=await r.validateApiKey();if(console.log("Validation result:",s),!s.isValid)return n.NextResponse.json({error:"API key validation failed",details:s.error,isValid:!1},{status:401});console.log("=== TEST 2: List Workspaces ===");let o=await r.listWorkspaces();console.log("Workspaces:",o),console.log("=== TEST 3: List Forms ===");let a=await r.listForms();return console.log("Forms count:",a.length),n.NextResponse.json({success:!0,isValid:!0,workspaces:o.length,forms:a.length,message:"API key is working correctly!"})}catch(e){return console.error("Tally API test error:",e),n.NextResponse.json({error:"Tally API test failed",details:e instanceof Error?e.message:String(e),isValid:!1},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/test-tally-api/route",pathname:"/api/test-tally-api",filename:"route",bundlePath:"app/api/test-tally-api/route"},resolvedPagePath:"/Users/akunay/VibeCoding/RESPIRA_TALLY/app/api/test-tally-api/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:u,staticGenerationAsyncStorage:d,serverHooks:g}=p,m="/api/test-tally-api/route";function h(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}},3374:(e,t,r)=>{r.d(t,{A:()=>o});var s=r(4263);class o{constructor(e){this.baseUrl="https://tally.so/api",this.apiKey=e,this.client=s.Z.create({baseURL:this.baseUrl,headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"},timeout:3e4}),this.client.interceptors.response.use(e=>e,e=>{if(e.response)throw Error(`Tally API Error: ${e.response.status} - ${e.response.data?.message||e.message}`);if(e.request)throw Error("Network Error: Unable to connect to Tally API");throw Error(`Request Error: ${e.message}`)})}async validateApiKey(){try{let e=await this.client.get("/workspaces");if(e.data&&e.data.items&&e.data.items.length>0){let t=e.data.items[0],r={id:t.createdByUserId,email:"user@example.com",name:"API User",createdAt:t.createdAt,updatedAt:t.updatedAt};return{isValid:!0,user:r}}return{isValid:!1,error:"No workspaces found"}}catch(e){return{isValid:!1,error:e instanceof Error?e.message:String(e)}}}async getUser(){try{return(await this.client.get("/user")).data}catch(e){throw Error(`Failed to get user: ${e instanceof Error?e.message:String(e)}`)}}async listForms(){try{return(await this.client.get("/forms")).data.items}catch(e){throw Error(`Failed to list forms: ${e instanceof Error?e.message:String(e)}`)}}async getForm(e){try{return(await this.client.get(`/forms/${e}`)).data}catch(t){throw Error(`Failed to get form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async debugFormCreation(e,t){try{console.log("=== DEBUGGING FORM CREATION ==="),console.log("Form ID:",e);let r=await this.getForm(e);console.log("Retrieved form:",JSON.stringify(r,null,2)),console.log("=== COMPARISON ==="),console.log("Sent blocks count:",t.length),console.log("Retrieved form blocks count:",r.blocks?.length||0),console.log("Has draft blocks:",r.hasDraftBlocks),r.blocks&&r.blocks.length>0?(console.log("Retrieved blocks:"),r.blocks.forEach((e,t)=>{console.log(`Retrieved Block ${t}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{})})})):console.log("❌ NO BLOCKS RETRIEVED - This confirms the API limitation")}catch(e){console.error("Debug error:",e)}}async createForm(e){try{console.log("=== CREATING FORM ==="),console.log("Form data being sent to Tally:",JSON.stringify(e,null,2)),console.log("Number of blocks:",e.blocks?.length||0),e.blocks&&e.blocks.forEach((e,t)=>{console.log(`Block ${t}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{}),hasOptions:!!e.payload?.options,optionsCount:e.payload?.options?.length||0})});let t=await this.client.post("/forms",e);return console.log("=== FORM CREATED SUCCESSFULLY ==="),console.log("Tally response:",t.data),console.log("Form ID:",t.data.id),console.log("Has draft blocks:",t.data.hasDraftBlocks),t.data}catch(e){throw console.error("=== FORM CREATION ERROR ==="),console.error("Error creating form:",e),e instanceof Error&&"response"in e&&console.error("Axios error details:",{status:e.response?.status,statusText:e.response?.statusText,data:e.response?.data,headers:e.response?.headers}),Error(`Failed to create form: ${e instanceof Error?e.message:String(e)}`)}}async updateForm(e,t){try{return(await this.client.patch(`/forms/${e}`,t)).data}catch(t){throw Error(`Failed to update form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async deleteForm(e){try{return await this.client.delete(`/forms/${e}`),!0}catch(t){throw Error(`Failed to delete form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async listSubmissions(e){try{return(await this.client.get(`/forms/${e}/submissions`)).data.items}catch(t){throw Error(`Failed to list submissions for form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async getSubmission(e,t){try{return(await this.client.get(`/forms/${e}/submissions/${t}`)).data}catch(e){throw Error(`Failed to get submission ${t}: ${e instanceof Error?e.message:String(e)}`)}}async deleteSubmission(e,t){try{return await this.client.delete(`/forms/${e}/submissions/${t}`),!0}catch(e){throw Error(`Failed to delete submission ${t}: ${e instanceof Error?e.message:String(e)}`)}}async listWorkspaces(){try{return(await this.client.get("/workspaces")).data.items}catch(e){throw Error(`Failed to list workspaces: ${e instanceof Error?e.message:String(e)}`)}}async createWorkspace(e,t){try{return(await this.client.post("/workspaces",{name:e,slug:t})).data}catch(e){throw Error(`Failed to create workspace: ${e instanceof Error?e.message:String(e)}`)}}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972,263],()=>r(1946));module.exports=s})();