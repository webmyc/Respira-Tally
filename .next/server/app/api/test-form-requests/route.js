"use strict";(()=>{var e={};e.id=152,e.ids=[152],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7790:e=>{e.exports=require("assert")},4770:e=>{e.exports=require("crypto")},7702:e=>{e.exports=require("events")},2048:e=>{e.exports=require("fs")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},9801:e=>{e.exports=require("os")},5315:e=>{e.exports=require("path")},6162:e=>{e.exports=require("stream")},4175:e=>{e.exports=require("tty")},7360:e=>{e.exports=require("url")},1764:e=>{e.exports=require("util")},1568:e=>{e.exports=require("zlib")},5031:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>u});var o=r(9303),a=r(8716),i=r(670),n=r(7070),l=r(3374),c=r(2563);async function u(e){try{let{apiKey:t}=await e.json();if(!t)return n.NextResponse.json({error:"API key is required"},{status:400});let r=new l.A(t),s=await r.validateApiKey();if(!s.isValid)return n.NextResponse.json({error:"Invalid API key",details:s.error},{status:401});let o=await r.listWorkspaces();if(0===o.length)return n.NextResponse.json({error:"No workspaces found"},{status:400});let a=o[0].id,i=[{name:"Minimal Request",request:{name:"Test Minimal",workspaceId:a,status:"DRAFT",blocks:[{uuid:(0,c.Z)(),type:"FORM_TITLE",groupUuid:(0,c.Z)(),groupType:"TEXT",payload:{title:"Test Minimal",html:"Test Minimal"}}]}},{name:"With Description",request:{name:"Test With Description",description:"A test form",workspaceId:a,status:"DRAFT",blocks:[{uuid:(0,c.Z)(),type:"FORM_TITLE",groupUuid:(0,c.Z)(),groupType:"TEXT",payload:{title:"Test With Description",html:"Test With Description"}}]}},{name:"Published Status",request:{name:"Test Published",workspaceId:a,status:"PUBLISHED",blocks:[{uuid:(0,c.Z)(),type:"FORM_TITLE",groupUuid:(0,c.Z)(),groupType:"TEXT",payload:{title:"Test Published",html:"Test Published"}}]}},{name:"With Settings",request:{name:"Test With Settings",workspaceId:a,status:"DRAFT",settings:{language:"en",isClosed:!1},blocks:[{uuid:(0,c.Z)(),type:"FORM_TITLE",groupUuid:(0,c.Z)(),groupType:"TEXT",payload:{title:"Test With Settings",html:"Test With Settings"}}]}}],u=[];for(let e of i)try{console.log(`Testing ${e.name}:`,JSON.stringify(e.request,null,2));let t=await r.createForm(e.request),s=await r.getForm(t.id);u.push({testName:e.name,formId:t.id,blocksSent:e.request.blocks.length,blocksRetrieved:s.blocks?.length||0,success:(s.blocks?.length||0)>0,retrievedBlocks:s.blocks||[],formStatus:s.status}),console.log(`${e.name} result:`,{blocksSent:e.request.blocks.length,blocksRetrieved:s.blocks?.length||0,formStatus:s.status})}catch(t){u.push({testName:e.name,error:t instanceof Error?t.message:String(t),success:!1})}return n.NextResponse.json({success:!0,results:u,summary:{totalTests:i.length,successfulTests:u.filter(e=>e.success).length,failedTests:u.filter(e=>!e.success).length}})}catch(e){return console.error("Form request test error:",e),n.NextResponse.json({error:"Form request test failed",message:e.message,stack:e.stack?.substring(0,500)},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/test-form-requests/route",pathname:"/api/test-form-requests",filename:"route",bundlePath:"app/api/test-form-requests/route"},resolvedPagePath:"/Users/akunay/VibeCoding/RESPIRA_TALLY/app/api/test-form-requests/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:m}=p,h="/api/test-form-requests/route";function f(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},2563:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(4770),o=r.n(s);let a=new Uint8Array(256),i=a.length,n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).substr(1));let c=function(e,t=0){let r=(l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]).toLowerCase();if(!("string"==typeof r&&n.test(r)))throw TypeError("Stringified UUID is invalid");return r},u=function(e,t,r){let s=(e=e||{}).random||(e.rng||function(){return i>a.length-16&&(o().randomFillSync(a),i=0),a.slice(i,i+=16)})();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=s[e];return t}return c(s)}},3374:(e,t,r)=>{r.d(t,{A:()=>o});var s=r(4263);class o{constructor(e){this.baseUrl="https://tally.so/api",this.apiKey=e,this.client=s.Z.create({baseURL:this.baseUrl,headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"},timeout:3e4}),this.client.interceptors.response.use(e=>e,e=>{if(e.response)throw Error(`Tally API Error: ${e.response.status} - ${e.response.data?.message||e.message}`);if(e.request)throw Error("Network Error: Unable to connect to Tally API");throw Error(`Request Error: ${e.message}`)})}async validateApiKey(){try{let e=await this.client.get("/workspaces");if(e.data&&e.data.items&&e.data.items.length>0){let t=e.data.items[0],r={id:t.createdByUserId,email:"user@example.com",name:"API User",createdAt:t.createdAt,updatedAt:t.updatedAt};return{isValid:!0,user:r}}return{isValid:!1,error:"No workspaces found"}}catch(e){return{isValid:!1,error:e instanceof Error?e.message:String(e)}}}async getUser(){try{return(await this.client.get("/user")).data}catch(e){throw Error(`Failed to get user: ${e instanceof Error?e.message:String(e)}`)}}async listForms(){try{return(await this.client.get("/forms")).data.items}catch(e){throw Error(`Failed to list forms: ${e instanceof Error?e.message:String(e)}`)}}async getForm(e){try{return(await this.client.get(`/forms/${e}`)).data}catch(t){throw Error(`Failed to get form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async debugFormCreation(e,t){try{console.log("=== DEBUGGING FORM CREATION ==="),console.log("Form ID:",e);let r=await this.getForm(e);console.log("Retrieved form:",JSON.stringify(r,null,2)),console.log("=== COMPARISON ==="),console.log("Sent blocks count:",t.length),console.log("Retrieved form blocks count:",r.blocks?.length||0),console.log("Has draft blocks:",r.hasDraftBlocks),r.blocks&&r.blocks.length>0?(console.log("Retrieved blocks:"),r.blocks.forEach((e,t)=>{console.log(`Retrieved Block ${t}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{})})})):console.log("❌ NO BLOCKS RETRIEVED - This confirms the API limitation")}catch(e){console.error("Debug error:",e)}}async createForm(e){try{console.log("=== CREATING FORM ==="),console.log("Form data being sent to Tally:",JSON.stringify(e,null,2)),console.log("Number of blocks:",e.blocks?.length||0),e.blocks&&e.blocks.forEach((e,t)=>{console.log(`Block ${t}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{}),hasOptions:!!e.payload?.options,optionsCount:e.payload?.options?.length||0})});let t=await this.client.post("/forms",e);return console.log("=== FORM CREATED SUCCESSFULLY ==="),console.log("Tally response:",t.data),console.log("Form ID:",t.data.id),console.log("Has draft blocks:",t.data.hasDraftBlocks),t.data}catch(e){throw console.error("=== FORM CREATION ERROR ==="),console.error("Error creating form:",e),e instanceof Error&&"response"in e&&console.error("Axios error details:",{status:e.response?.status,statusText:e.response?.statusText,data:e.response?.data,headers:e.response?.headers}),Error(`Failed to create form: ${e instanceof Error?e.message:String(e)}`)}}async updateForm(e,t){try{return(await this.client.patch(`/forms/${e}`,t)).data}catch(t){throw Error(`Failed to update form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async deleteForm(e){try{return await this.client.delete(`/forms/${e}`),!0}catch(t){throw Error(`Failed to delete form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async listSubmissions(e){try{return(await this.client.get(`/forms/${e}/submissions`)).data.items}catch(t){throw Error(`Failed to list submissions for form ${e}: ${t instanceof Error?t.message:String(t)}`)}}async getSubmission(e,t){try{return(await this.client.get(`/forms/${e}/submissions/${t}`)).data}catch(e){throw Error(`Failed to get submission ${t}: ${e instanceof Error?e.message:String(e)}`)}}async deleteSubmission(e,t){try{return await this.client.delete(`/forms/${e}/submissions/${t}`),!0}catch(e){throw Error(`Failed to delete submission ${t}: ${e instanceof Error?e.message:String(e)}`)}}async listWorkspaces(){try{return(await this.client.get("/workspaces")).data.items}catch(e){throw Error(`Failed to list workspaces: ${e instanceof Error?e.message:String(e)}`)}}async createWorkspace(e,t){try{return(await this.client.post("/workspaces",{name:e,slug:t})).data}catch(e){throw Error(`Failed to create workspace: ${e instanceof Error?e.message:String(e)}`)}}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972,263],()=>r(5031));module.exports=s})();