"use strict";(()=>{var e={};e.id=751,e.ids=[751],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7790:e=>{e.exports=require("assert")},4770:e=>{e.exports=require("crypto")},7702:e=>{e.exports=require("events")},2048:e=>{e.exports=require("fs")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},9801:e=>{e.exports=require("os")},5315:e=>{e.exports=require("path")},6162:e=>{e.exports=require("stream")},4175:e=>{e.exports=require("tty")},7360:e=>{e.exports=require("url")},1764:e=>{e.exports=require("util")},1568:e=>{e.exports=require("zlib")},3026:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var s={};t.r(s),t.d(s,{POST:()=>p});var o=t(9303),a=t(8716),i=t(670),n=t(7070),c=t(3374),l=t(2825);async function p(e){try{let{apiKey:r,prompt:t}=await e.json();if(!r||!t)return n.NextResponse.json({error:"API key and prompt are required"},{status:400});let s={timestamp:new Date().toISOString(),hasApiKey:!!r,apiKeyPrefix:r.substring(0,10)+"...",prompt:t.substring(0,100)+"...",environment:{hasGroqKey:!!process.env.GROQ_API_KEY,groqKeyLength:process.env.GROQ_API_KEY?.length||0,nodeEnv:"production"}};try{let e=new c.A(r),o=await e.validateApiKey();if(s.apiKeyValidation={isValid:o.isValid,error:o.error,workspaces:o.workspaces?.length||0},o.isValid){let r=await e.listWorkspaces();if(s.workspaces=r.map(e=>({id:e.id,name:e.name})),r.length>0){let o=new l.j(e),a=await o.parsePrompt(t);s.formParsing={success:!0,title:a.title,sectionsCount:a.sections?.length||0,blocksCount:a.blocks?.length||0},s.formCreation={workspaceId:r[0].id,readyToCreate:!0}}}}catch(e){s.errors={message:e.message,stack:e.stack?.substring(0,500),type:e.constructor.name}}return n.NextResponse.json(s)}catch(e){return n.NextResponse.json({error:"Debug endpoint error",message:e.message,stack:e.stack?.substring(0,500)},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/debug-form/route",pathname:"/api/debug-form",filename:"route",bundlePath:"app/api/debug-form/route"},resolvedPagePath:"/Users/akunay/VibeCoding/RESPIRA_TALLY/app/api/debug-form/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:m}=u,h="/api/debug-form/route";function y(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},3374:(e,r,t)=>{t.d(r,{A:()=>o});var s=t(4263);class o{constructor(e){this.baseUrl="https://tally.so/api",this.apiKey=e,this.client=s.Z.create({baseURL:this.baseUrl,headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json",Accept:"application/json"},timeout:3e4}),this.client.interceptors.response.use(e=>e,e=>{if(e.response)throw Error(`Tally API Error: ${e.response.status} - ${e.response.data?.message||e.message}`);if(e.request)throw Error("Network Error: Unable to connect to Tally API");throw Error(`Request Error: ${e.message}`)})}async validateApiKey(){try{let e=await this.client.get("/workspaces");if(e.data&&e.data.items&&e.data.items.length>0){let r=e.data.items[0],t={id:r.createdByUserId,email:"user@example.com",name:"API User",createdAt:r.createdAt,updatedAt:r.updatedAt};return{isValid:!0,user:t}}return{isValid:!1,error:"No workspaces found"}}catch(e){return{isValid:!1,error:e instanceof Error?e.message:String(e)}}}async getUser(){try{return(await this.client.get("/user")).data}catch(e){throw Error(`Failed to get user: ${e instanceof Error?e.message:String(e)}`)}}async listForms(){try{return(await this.client.get("/forms")).data.items}catch(e){throw Error(`Failed to list forms: ${e instanceof Error?e.message:String(e)}`)}}async getForm(e){try{return(await this.client.get(`/forms/${e}`)).data}catch(r){throw Error(`Failed to get form ${e}: ${r instanceof Error?r.message:String(r)}`)}}async debugFormCreation(e,r){try{console.log("=== DEBUGGING FORM CREATION ==="),console.log("Form ID:",e);let t=await this.getForm(e);console.log("Retrieved form:",JSON.stringify(t,null,2)),console.log("=== COMPARISON ==="),console.log("Sent blocks count:",r.length),console.log("Retrieved form blocks count:",t.blocks?.length||0),console.log("Has draft blocks:",t.hasDraftBlocks),t.blocks&&t.blocks.length>0?(console.log("Retrieved blocks:"),t.blocks.forEach((e,r)=>{console.log(`Retrieved Block ${r}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{})})})):console.log("❌ NO BLOCKS RETRIEVED - This confirms the API limitation")}catch(e){console.error("Debug error:",e)}}async createForm(e){try{console.log("=== CREATING FORM ==="),console.log("Form data being sent to Tally:",JSON.stringify(e,null,2)),console.log("Number of blocks:",e.blocks?.length||0),e.blocks&&e.blocks.forEach((e,r)=>{console.log(`Block ${r}:`,{type:e.type,groupType:e.groupType,payloadKeys:Object.keys(e.payload||{}),hasOptions:!!e.payload?.options,optionsCount:e.payload?.options?.length||0})});let r=await this.client.post("/forms",e);return console.log("=== FORM CREATED SUCCESSFULLY ==="),console.log("Tally response:",r.data),console.log("Form ID:",r.data.id),console.log("Has draft blocks:",r.data.hasDraftBlocks),r.data}catch(e){throw console.error("=== FORM CREATION ERROR ==="),console.error("Error creating form:",e),e instanceof Error&&"response"in e&&console.error("Axios error details:",{status:e.response?.status,statusText:e.response?.statusText,data:e.response?.data,headers:e.response?.headers}),Error(`Failed to create form: ${e instanceof Error?e.message:String(e)}`)}}async updateForm(e,r){try{return(await this.client.patch(`/forms/${e}`,r)).data}catch(r){throw Error(`Failed to update form ${e}: ${r instanceof Error?r.message:String(r)}`)}}async deleteForm(e){try{return await this.client.delete(`/forms/${e}`),!0}catch(r){throw Error(`Failed to delete form ${e}: ${r instanceof Error?r.message:String(r)}`)}}async listSubmissions(e){try{return(await this.client.get(`/forms/${e}/submissions`)).data.items}catch(r){throw Error(`Failed to list submissions for form ${e}: ${r instanceof Error?r.message:String(r)}`)}}async getSubmission(e,r){try{return(await this.client.get(`/forms/${e}/submissions/${r}`)).data}catch(e){throw Error(`Failed to get submission ${r}: ${e instanceof Error?e.message:String(e)}`)}}async deleteSubmission(e,r){try{return await this.client.delete(`/forms/${e}/submissions/${r}`),!0}catch(e){throw Error(`Failed to delete submission ${r}: ${e instanceof Error?e.message:String(e)}`)}}async listWorkspaces(){try{return(await this.client.get("/workspaces")).data.items}catch(e){throw Error(`Failed to list workspaces: ${e instanceof Error?e.message:String(e)}`)}}async createWorkspace(e,r){try{return(await this.client.post("/workspaces",{name:e,slug:r})).data}catch(e){throw Error(`Failed to create workspace: ${e instanceof Error?e.message:String(e)}`)}}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972,263,825],()=>t(3026));module.exports=s})();